rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /page_loads/{page_load} {
      function validateLoadEvent() {
        return request.resource.data.keys().hasOnly(['page_path', 'timestamp']) &&
        request.resource.data['page_path'] is string &&
        request.resource.data['page_path'].size() < 100 &&
        request.resource.data['timestamp'] == request.time;
      }
      allow create: if validateLoadEvent();
    }
    match /link_clicks/{link_click} {
      function validateClickEvent() {
        return request.resource.data.keys().hasOnly(['href', 'page_path', 'timestamp']) &&
        request.resource.data['href'] is string &&
        request.resource.data['href'].size() < 500 &&
        request.resource.data['page_path'] is string &&
        request.resource.data['page_path'].size() < 100 &&
        request.resource.data['timestamp'] == request.time;
      }
      allow create: if validateClickEvent();
    }
    match /qr_referrals/{qr_referral} {
      function validateReferralEvent() {
        return request.resource.data.keys().hasOnly(['page_path', 'qr_id', 'date']) &&
        request.resource.data['page_path'] is string &&
        request.resource.data['page_path'].size() < 100 &&
        request.resource.data['qr_id'] is string &&
        request.resource.data['qr_id'].size() == 20 &&
        request.resource.data['date'] == request.time.date();
      }
      allow create: if validateReferralEvent();
    }
  }
}
